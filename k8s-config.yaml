apiVersion: v1
kind: Namespace
metadata:
  name: raft-demo
---
# Headless Service：为 StatefulSet 提供稳定的 Pod DNS
apiVersion: v1
kind: Service
metadata:
  name: raft
  namespace: raft-demo
spec:
  clusterIP: None
  selector:
    app: raft
  ports:
    - name: rpc
      port: 8181
      targetPort: 8181
---
# （可选）对外暴露，一个端口映射到 8181
# 需要从宿主或集群外访问时再启用
apiVersion: v1
kind: Service
metadata:
  name: raft-nodeport
  namespace: raft-demo
spec:
  type: NodePort
  selector:
    app: raft
  ports:
    - name: rpc
      port: 8181
      targetPort: 8181
      nodePort: 30080
---
# 配置：把 initialServerList 放在 node.yaml 里（使用 StatefulSet 固定主机名）
apiVersion: v1
kind: ConfigMap
metadata:
  name: raft-config
  namespace: raft-demo
data:
  node.yaml: |
    ##RheaKVStoreOptions
    ---
    clusterName: rhea_example
    placementDriverOptions:
      fake: true          # 无 PD 模式
    storeEngineOptions:
      rocksDBOptions:
        dbPath: /data/rhea_db/
      raftDataPath: /data/rhea_raft/
      serverAddress:
        ip: 0.0.0.0       # 容器内监听所有网卡
        port: 8181        # RheaKV 对外端口（客户端 & peers 访问这个）
    # 3 个副本的固定 FQDN（StatefulSet+Headless 服务）
    initialServerList: raft-0.raft.raft-demo.svc.cluster.local:8181,raft-1.raft.raft-demo.svc.cluster.local:8181,raft-2.raft.raft-demo.svc.cluster.local:8181
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: raft
  namespace: raft-demo
spec:
  serviceName: raft
  replicas: 3
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: raft
  template:
    metadata:
      labels:
        app: raft
    spec:
      terminationGracePeriodSeconds: 10
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values: ["raft"]
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: raft
          image: raft-demo:1.0   # <<< 改成你的镜像
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8181
              name: rpc
          # 建议镜像的 ENTRYPOINT 仅指向可执行（不写死参数）；
          # 这里通过 args 传入：角色 + 配置路径
          args: ["server","/conf/node.yaml"]
          volumeMounts:
            - name: conf
              mountPath: /conf
            - name: data
              mountPath: /data
          # （可选）基础健康检查：TCP 探测 8081
          readinessProbe:
            tcpSocket: { port: 8181 }
            initialDelaySeconds: 100
            periodSeconds: 150
          livenessProbe:
            tcpSocket: { port: 8181 }
            initialDelaySeconds: 100
            periodSeconds: 150
      # 配置挂载（ConfigMap）+ 数据持久化（每 Pod 一个 PVC）
      volumes:
        - name: conf
          configMap:
            name: raft-config
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: raft-client-config
  namespace: raft-demo
data:
  client.yaml: |
    ##RheaClientOptions
        #    ---
        #    clusterName: rhea_example
        #    # 客户端只需知道 server 列表（使用 StatefulSet+Headless 的稳定 FQDN）
        #    initialServerList: raft-0.raft.raft-demo.svc.cluster.local:8181,raft-1.raft.raft-demo.svc.cluster.local:8181,raft-2.raft.raft-demo.svc.cluster.local:8181
        #    # 可选：RPC/超时/重试等（按你的程序键名调整）
        #    rpc:
        #      connectTimeoutMillis: 3000
        #      requestTimeoutMillis: 5000
        #
        #

---

apiVersion: app/v1
kind: Deployment
metadata:
  name: raft-client
  namespace: raft-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: raft-client
    template:
      metadata:
        labels:
          app: raft-client
      spec:
        terminationGracePeriodSeconds: 10
        containers:
          - name: raft-client
            image: raft-demo:1.0
            imagePullPolicy: IfNotPresent
            args: ["client", "/conf/client.yaml", "1", "1", "1", "1024"]
            volumeMounts:
              - name: conf
                mountPath: /conf
        volumes:
          - name: conf
            configMap:
              name: raft-client-config
